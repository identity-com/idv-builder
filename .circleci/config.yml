defaults:
  - &defaults
      docker:
      - image: circleci/node:14.4
  - &cache_restore
      restore_cache:
        keys:
          - v1-dependencies-{{ checksum "package.json" }}-{{checksum "yarn.lock"}}
  - &cache_save
      save_cache:
        paths:
          - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}-{{checksum "yarn.lock"}}
  - &machine-node
      run:
        name: Install Node, NPM, Yarn, docker-compose
        command: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
          export NVM_DIR="/opt/circleci/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install
          nvm use
          # installing yarn first
          curl -o- -L https://yarnpkg.com/install.sh | bash
          # instantiating yarn executable
          . ~/.bashrc
          export TERM=xterm-256color

commands:
  default-build:
    steps:
      - checkout:
          path: ~/repo
      - *cache_restore
      - run: yarn install
      - *cache_save

  pull-idv-images:
    steps:
      - checkout:
          path: ~/repo
      - *machine-node
      - *cache_restore
      - run:
          name: yarn install
          # sourcing bashrc is needed each time yarn or node is used,
          # because yarn is not installed ono the circle machine executor
          # and to ensure the correct version of node is used
          command: |
            . ~/.bashrc
            nvm use
            yarn install
      - run:
          name: Download identity.com base images
          command: |
            (cd ~/repo && scripts/pullIDVToolkitImages.sh latest)
      - *cache_save

  get-logs:
    steps:
      - run:
          name: Get logs
          command: |
            mkdir -p /tmp/docker-logs
            docker-compose logs > /tmp/docker-logs/docker.log
          when: on_fail
      - store_artifacts:
          path: /tmp/docker-logs

version: 2.1

workflows:
  version: 2.1

  build-and-test:
    jobs:
      - build-validation-module:
          context: Development
          filters:
            branches:
              ignore: master
      - local-e2e-tests:
          context: Development
          requires:
            - build-validation-module

jobs:
  build-validation-module:
    <<: *defaults
    working_directory: ~/repo/ValidationModule
    steps:
      - default-build

  local-e2e-tests:
    <<: *defaults
    working_directory: ~/repo/test

    steps:
      - attestation-module-e2e:
          test-command: ACCESS_TOKEN_PRIVATE_KEY=d8b695971544b620f5b155c809c39bc932de231903f082403f04b7a2c000d47d REMOTE_URL=http://idv-dev.civic.com/attestation yarn test:e2e

  preprod-attestation-module-e2e-tests:
    <<: *defaults
    working_directory: ~/repo/components/modules/AttestationModule

    steps:
      - attestation-module-e2e:
          test-command: ACCESS_TOKEN_PRIVATE_KEY=`STAGE=preprod node scripts/getAccessKey.js | grep privateKey | cut -d ":" -f 2` REMOTE_URL=https://idv-test.civic.com/attestation yarn test:e2e

  prod-attestation-module-e2e-tests:
    <<: *defaults
    working_directory: ~/repo/components/modules/AttestationModule

    steps:
      - attestation-module-e2e:
          test-command: IS_PROD=true ACCESS_TOKEN_PRIVATE_KEY=`STAGE=prod node scripts/getAccessKey.js | grep privateKey | cut -d ":" -f 2` REMOTE_URL=https://idv.civic.com/attestation yarn test:e2e

  dev-credential-module-e2e-tests:
    <<: *defaults
    working_directory: ~/repo/components/modules/CredentialModule

    steps:
      - credential-module-e2e:
          test-command: cd ~/repo/test && . ./scripts/initialize-dev.sh && cd ~/repo/components/modules/CredentialModule && REMOTE_URL=http://idv-dev.civic.com/credential yarn test:e2e

  preprod-credential-module-e2e-tests:
    <<: *defaults
    working_directory: ~/repo/components/modules/CredentialModule

    steps:
      - credential-module-e2e:
          test-command: cd ~/repo/test && . ./scripts/initialize-preprod.sh && cd ~/repo/components/modules/CredentialModule && REMOTE_URL=https://idv-test.civic.com/credential yarn test:e2e

  prod-credential-module-e2e-tests:
    <<: *defaults
    working_directory: ~/repo/components/modules/CredentialModule

    steps:
      - credential-module-e2e:
          test-command: cd ~/repo/test && . ./scripts/initialize-prod.sh && cd ~/repo/components/modules/CredentialModule && REMOTE_URL=https://idv.civic.com/credential yarn test:e2e

  local-validation-module-e2e-tests:
    machine: true
    working_directory: ~/repo/ValidationModule

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - run:
          name: Run E2E tests
          # sourcing bashrc is needed each time yarn or node is used,
          # because yarn is not installed ono the circle machine executor
          # and to ensure the correct version of node is used
          command: |
            . ~/.bashrc
            nvm use
            yarn test:e2e
      - get-logs

  local-idv-toolkit-e2e-tests:
    machine: true
    working_directory: ~/repo/test

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - run:
          name: Install validation module test dependencies
          command: |
            cd ../ValidationModule
            . ~/.bashrc
            nvm use
            yarn install
      - run:
          name: Run E2E tests
          # sourcing bashrc is needed each time yarn or node is used,
          # because yarn is not installed ono the circle machine executor
          # and to ensure the correct version of node is used
          command: |
            . ~/.bashrc
            nvm use
            STAGE=local-docker yarn test:e2e
      - get-logs

  dev-validation-module-e2e-tests:
    executor: helm/default
    working_directory: ~/repo/components/modules/ValidationModule

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - helm/setup-kube:
          cluster: civic
          namespace: idv-dev
      - run:
          name: Run E2E tests
          command: |
            . scripts/initialize-dev.sh
            yarn test:e2e

  preprod-validation-module-e2e-tests:
    executor: helm/default
    working_directory: ~/repo/components/modules/ValidationModule

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - helm/setup-kube:
          cluster: civic
          namespace: idv
      - run:
          name: Run E2E tests
          command: |
            . scripts/initialize-preprod.sh
            yarn test:e2e

  prod-validation-module-e2e-tests:
    <<: *defaults
    working_directory: ~/repo/components/modules/ValidationModule

    steps:
      - pre-build-e2e
      - run:
          name: Run E2E tests
          command: |
            . scripts/initialize-prod.sh
            yarn test:e2e

  dev-idv-e2e-tests:
    executor: helm/default
    working_directory: ~/repo/test

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - run: cd ~/repo/components/modules/ValidationModule && yarn
      - helm/setup-kube:
          cluster: civic
          namespace: idv-dev
      - run:
          name: Run E2E tests
          command: |
            . scripts/initialize-dev.sh
            yarn test:e2e

  preprod-idv-e2e-tests:
    executor: helm/default
    working_directory: ~/repo/test

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - run: cd ~/repo/components/modules/ValidationModule && yarn
      - helm/setup-kube:
          cluster: civic
          namespace: idv
      - run:
          name: Run E2E tests
          command: |
            . scripts/initialize-preprod.sh
            yarn test:e2e

  idv-load-tests:
    executor: helm/default
    working_directory: ~/repo/test
    resource_class: xlarge

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - helm/setup-kube:
          cluster: civic
          namespace: idv-load-test
      - run:
          name: Run Load tests
          command: |
            . scripts/initialize-load.sh
            yarn load_ci

  prod-idv-e2e-tests:
    executor: helm/default
    working_directory: ~/repo/test

    environment:
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - pre-build-e2e
      - run: cd ~/repo/components/modules/ValidationModule && yarn
      - helm/setup-kube:
          cluster: civic
          namespace: idv
      - run:
          name: Run E2E tests
          command: |
            . scripts/initialize-prod.sh
            yarn test:e2e
