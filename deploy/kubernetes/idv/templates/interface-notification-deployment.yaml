apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-notification-interface
  labels:
    app: notification-interface
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-interface
  template:
    metadata:
      labels:
        app: notification-interface
        requires-aws-creds: "{{ .Values.pods.labels.requiresAwsCreds }}"
    spec:
      containers:
        - name: notification-interface
          image: {{ .Values.pods.image.registry }}idvtoolkit/notificationinterface:{{ .Values.pods.image.tag }}
          imagePullPolicy: {{ .Values.pods.imagePullPolicy }}
          env:
            # The location of the application config - mapped by the config volume
            # and populated by the idvtoolkit/config
            - name: NODE_CONFIG_DIR
              value: /opt/app/config/config/notificationinterface
            - name: NODE_ENV
              value: {{ .Values.pods.environment }}
            - name: NEW_RELIC_ENABLED
              value: "false" #  "{{ .Values.newrelic.enabled }}"  # hard-code false for non-critical components to save NR costs
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            # Exposes the config to the application
            - mountPath: /opt/app/config
              name: config
              readOnly: true
      initContainers:
        # Loads secrets and sends the config to the application via the config volume
        - name: config
          image: {{ .Values.pods.image.registry }}idvtoolkit/config:{{ .Values.pods.image.tag }}
          imagePullPolicy: {{ .Values.pods.imagePullPolicy }}
          volumeMounts:
            - mountPath: /resolvedConfig
              name: config
      volumes:
        - name: config
          # Uses tmpfs to avoid storing secrets on disk
          emptyDir: {"medium":"Memory"}
