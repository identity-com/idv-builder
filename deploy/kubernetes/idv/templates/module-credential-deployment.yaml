apiVersion: apps/v1
kind: Deployment
metadata:
  name: credential-module
  labels:
    app: credential-module
spec:
  replicas: 2
  selector:
    matchLabels:
      app: credential-module
  template:
    metadata:
      labels:
        app: credential-module
        requires-aws-creds: "{{ .Values.pods.labels.requiresAwsCreds }}"
    spec:
      containers:
        - name: credential-module
          image: {{ .Values.pods.image.registry }}idvtoolkit/credentialmodule:{{ .Values.pods.image.tag }}
          imagePullPolicy: {{ .Values.pods.imagePullPolicy }}
          env:
            # The location of the application config - mapped by the config volume
            # and populated by the idvtoolkit/config
            - name: NODE_CONFIG_DIR
              value: /opt/app/config:/opt/app/config/plugins
            {{- if .Values.credentialmodule.config }}
            - name: NODE_CONFIG
              value: {{ .Values.credentialmodule.config | quote }}
            {{- end}}
            # currently set to preprod only TODO move this to values.yaml
            - name: NODE_ENV
              value: {{ .Values.pods.environment }}
            - name: NEW_RELIC_ENABLED
              value: "{{ .Values.newrelic.enabled }}"
            # The DNS name for the db service. Should be available at mongodb://<db name>:27017
            - name: DB_SERVICE
              {{- if .Values.mongodb.internal }}
              value: mongodb
              {{- end}}
            - name: RABBITMQ_SERVICE
              {{- if .Values.rabbitmq.internal }}
              value: rabbitmq
              {{- end}}
          envFrom:
              - secretRef:
                    # these secrets are used to obtain the rabbitmq admin password
                    name: rabbitmq
          ports:
            - name: http
              containerPort: 3030
          volumeMounts:
            # Exposes the config to the application
            - mountPath: /opt/app/config
              name: config
              readOnly: true
          readinessProbe:
            httpGet:
              path: /health?includeExternal=true
              port: http
            initialDelaySeconds: 3
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /health?includeExternal=true
              port: http
            initialDelaySeconds: 3
            periodSeconds: 30
