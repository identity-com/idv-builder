apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-analytics
  labels:
    app: analytics
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics
  template:
    metadata:
      labels:
        app: analytics
        requires-aws-creds: "{{ .Values.pods.labels.requiresAwsCreds }}"
    spec:
      containers:
        - name: analytics
          image: {{ .Values.pods.image.registry }}idvtoolkit/analytics:{{ .Values.pods.image.tag }}
          imagePullPolicy: {{ .Values.pods.imagePullPolicy }}
          env:
            # The location of the application config - mapped by the config volume
            # and populated by the idvtoolkit/config
            - name: NODE_CONFIG_DIR
              value: /opt/app/config/config/analytics
            {{- if .Values.analytics.config }}
            - name: NODE_CONFIG
              value: {{ .Values.analytics.config | quote }}
            {{- end}}
            # currently set to preprod only TODO move this to values.yaml
            - name: NODE_ENV
              value: {{ .Values.pods.environment }}
            - name: RABBITMQ_SERVICE
              {{- if .Values.rabbitmq.internal }}
              value: {{ .Release.Name }}-rabbitmq
              {{- end}}
            - name: NEW_RELIC_ENABLED
              value: "false" #  "{{ .Values.newrelic.enabled }}"  # hard-code false for non-critical components to save NR costs
            # force K8s to recreate the pod if the connection with RabbitMQ closes
            - name: EXIT_ON_CONNECTION_CLOSE
              value: "true"
          envFrom:
            - secretRef:
                # these secrets are used to obtain the rabbitmq admin password
                name: {{ .Release.Name }}-rabbitmq
          volumeMounts:
            # Exposes the config to the application
            - mountPath: /opt/app/config
              name: config
              readOnly: true
      initContainers:
        # Loads secrets and sends the config to the application via the config volume
        - name: config
          image: {{ .Values.pods.image.registry }}idvtoolkit/config:{{ .Values.pods.image.tag }}
          imagePullPolicy: {{ .Values.pods.imagePullPolicy }}
          # PodPresets do not currently apply to InitContainers https://github.com/kubernetes/kubernetes/issues/55410
          {{ if .Values.pods.labels.requiresAwsCreds }}
          env:
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.aws_access_key_id }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.aws_secret_access_key }}
          {{ end }}
          volumeMounts:
            - mountPath: /resolvedConfig
              name: config
      volumes:
        - name: config
          # Uses tmpfs to avoid storing secrets on disk
          emptyDir: {"medium":"Memory"}
